# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.19)

# Enable support for MSVC_RUNTIME_LIBRARY
cmake_policy(SET CMP0091 NEW)
set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include("cmake/cmkr.cmake" OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

set(CMAKE_CONFIGURATION_TYPES Debug Release)

project(payload
	LANGUAGES
		CXX
)

include("cmake/riscvm.cmake")

# Target: riscvm-crt0
set(riscvm-crt0_SOURCES
	"src/riscvm-crt0.cpp"
	cmake.toml
)

add_library(riscvm-crt0 SHARED)

target_sources(riscvm-crt0 PRIVATE ${riscvm-crt0_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${riscvm-crt0_SOURCES})

# Target: payload
set(payload_SOURCES
	"src/main.cpp"
	"src/phnt.h"
	cmake.toml
)

add_riscvm_executable(payload)

target_sources(payload PRIVATE ${payload_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${payload_SOURCES})

target_compile_features(payload PRIVATE
	cxx_std_17
)

target_link_libraries(payload PRIVATE
	riscvm-crt0
	ntdll.lib
)

if(MSVC) # msvc
	target_link_options(payload PRIVATE
		"/INCREMENTAL:NO"
		"/DEBUG"
	)
endif()

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT payload)
endif()
